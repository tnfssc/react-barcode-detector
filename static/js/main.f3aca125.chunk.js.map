{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["validFreq","BarDetect","off","freq","rageMode","onDetect","console","onError","props","videoRef","useRef","canvasRef","rageRef","tick","useCallback","context","drawLine","begin","end","imageData","code","jsQR","inversionAttempts","onProcess","requestAnimationFrame","useEffect","navigator","video","facingMode","frameRate","height","width","audio","stream","error","animation","cancelAnimationFrame","interval","setInterval","clearInterval","hidden","playsInline","ref","style","videoStyle","autoPlay","normalizeFreq","App","useState","setRageMode","setFreq","lastDetected","setLastDetected","type","checked","onChange","e","target","value","disabled","parseInt","map","fre","key","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"qOAOaA,EAAY,CAAC,IAAK,IAAK,IAAK,IAAK,KAejCC,EAAY,SAAC,GAAD,IAAC,EAAD,EAAC,QAAD,EAAC,OAAD,IAGvBC,WAHuB,aAIvBC,YAJuB,MAAC,IAAD,EAAC,EAAD,EAAC,WAAD,IAMvBC,gBANuB,aAOvBC,gBAPuB,MAOZC,QAPa,IAAD,MAQvBC,eARuB,MAQbD,QARc,MAAD,EAAC,EAAD,EAAC,UAUrBE,EAVoB,wGAYjBC,EAAWC,iBAAjB,MACMC,EAAYD,iBAAlB,MACME,EAAUF,iBAAhB,GAEMG,EAAOC,uBAAY,WACvB,OACA,GACEL,WACAE,EADAF,SAEAA,uBAAgCA,UAHlC,iBAIE,CACAE,oBACA,IAAMI,EAAUJ,qBAAhB,MACA,MAAc,OACd,IAAMK,EAAW,SAACC,EAAD,KACfF,cACAA,SAAeE,EAAfF,EAAwBE,EAAxBF,GACAA,SAAeG,EAAfH,EAAsBG,EAAtBH,GACAA,cACAA,gBACAA,YAEFJ,iBAA2BF,UAA3BE,YACAA,gBAA0BF,UAA1BE,WACAI,YACEN,EADFM,YAIEJ,UAJFI,MAKEJ,UALFI,QAOA,IAAMI,EAAYJ,mBAGhBJ,UAHgBI,MAIhBJ,UAJF,QAMMS,EAAOC,IAAKF,EAAD,KAAiBA,EAAjB,MAAkCA,EAAlC,OAAoD,CACnEG,kBAAmB,eAErB,KAAe,OAAOC,EAAP,GACf,IACEP,EACEI,WADM,cAENA,WAFM,eAARJ,WAKAA,EACEI,WADM,eAENA,WAFM,kBAARJ,WAKAA,EACEI,WADM,kBAENA,WAFM,iBAARJ,WAKAA,EACEI,WADM,iBAENA,WAFM,cAARJ,WAKAX,EAASe,EAATf,OAGAO,EAAJ,SAAqBY,4BACpB,CA9DH,IAgGA,OAjCAC,qBAAU,WACRC,oCACgB,CACZC,MAAO,CACLC,WADK,cAELC,UAFK,GAGLC,SACAC,SAEFC,OAAO,IARXN,MAUSO,YACDxB,EAAJ,UAAsBA,0BAX1BiB,OAaUQ,YACN3B,UAfNkB,IAkBAA,qBAAU,WAER,GADAb,YACIA,EAAJ,QAAqB,CACnB,IAAMuB,EAAYX,sBAAlB,GACA,OAAO,kBAAMY,qBAAb,IAEF,MACMC,EAAWC,aAAY,WAC3BH,EAAYX,sBAAZW,KADF,GAGA,OAAO,WACLI,iBACAH,2BAED,CAAC,EAdJX,IAgBE,4CACE,2BACEe,QAAM,EACNC,aAAW,EACXC,IAAKjC,EACLsB,MAAOA,EACPD,OAAQA,EACRa,MAAOC,EACPC,UAAQ,IAEV,4BAAQH,IAAK/B,EAAWoB,MAAOA,EAAOD,OAAQA,EAAQU,QAAM,MC7I5DM,EAAgB,SAAC3C,GACrB,OAAIA,EAAO,IAAY,IAChBA,GAkDM4C,EA/CH,WAAO,IAAD,EACgBC,oBAAS,GADzB,mBACT5C,EADS,KACC6C,EADD,OAEQD,mBAAoB,KAF5B,mBAET7C,EAFS,KAEH+C,EAFG,OAGwBF,mBAAwB,MAHhD,mBAGTG,EAHS,KAGKC,EAHL,KAKhB,OACE,6BACE,6BACE,kBAAC,EAAD,CACE/C,SAAU+C,EACVhD,SAAUA,EACVD,KAAM2C,EAAc3C,GACpBwC,MAAO,CAAEZ,MAAO,WAGpB,2CAEE,2BACEsB,KAAK,WACLC,QAASlD,EACTmD,SAAU,SAACC,GAAD,OAAOP,EAAYO,EAAEC,OAAOH,aAG1C,sCAEE,4BACEI,MAAOvD,EACPwD,SAAUvD,EAEVmD,SAAU,SAACC,GAAD,OAAON,EAAQJ,EAAcc,SAASJ,EAAEC,OAAOC,WAExD1D,EAAU6D,KAAI,SAACC,GAAD,OACb,4BAAQJ,MAAOI,EAAKC,IAAKD,GACtBA,QAKT,2BACET,KAAK,OACLK,MAAK,UAAKP,GACVI,SAAU,SAACC,GAAD,OAAOA,EAAEQ,sBC5C3BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f3aca125.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react'\n// eslint-disable-next-line\nimport { Point } from 'jsqr/dist/locator'\n// eslint-disable-next-line\nimport jsQR, { QRCode } from 'jsqr'\n\nexport type ValidFreq = 100 | 200 | 300 | 400 | 500\nexport const validFreq = [100, 200, 300, 400, 500]\n\nexport interface BarDetectProps {\n  width?: number\n  height?: number\n  rageMode?: boolean\n  freq?: ValidFreq\n  off?: false\n  videoStyle?: React.CSSProperties\n  onDetect?: (data: string) => void\n  onError?: (e: unknown) => void\n  onProcess?: (code: QRCode | null) => void\n  [key: string]: any\n}\n\nexport const BarDetect = ({\n  width,\n  height,\n  off = false,\n  freq = 200,\n  videoStyle,\n  rageMode = false,\n  onDetect = console.log,\n  onError = console.error,\n  onProcess,\n  ...props\n}: BarDetectProps) => {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const rageRef = useRef(rageMode)\n\n  const tick = useCallback(() => {\n    if (off) return\n    if (\n      videoRef.current &&\n      canvasRef.current &&\n      videoRef.current.readyState === videoRef.current.HAVE_ENOUGH_DATA\n    ) {\n      canvasRef.current.hidden = false\n      const context = canvasRef.current.getContext('2d')\n      if (!context) return\n      const drawLine = (begin: Point, end: Point, color: string) => {\n        context.beginPath()\n        context.moveTo(begin.x, begin.y)\n        context.lineTo(end.x, end.y)\n        context.lineWidth = 4\n        context.strokeStyle = color\n        context.stroke()\n      }\n      canvasRef.current.height = videoRef.current.videoHeight\n      canvasRef.current.width = videoRef.current.videoWidth\n      context.drawImage(\n        videoRef.current,\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n      )\n      const imageData = context.getImageData(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n      )\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: 'dontInvert'\n      })\n      if (onProcess) return onProcess(code)\n      if (code) {\n        drawLine(\n          code.location.topLeftCorner,\n          code.location.topRightCorner,\n          '#FF3B58'\n        )\n        drawLine(\n          code.location.topRightCorner,\n          code.location.bottomRightCorner,\n          '#FF3B58'\n        )\n        drawLine(\n          code.location.bottomRightCorner,\n          code.location.bottomLeftCorner,\n          '#FF3B58'\n        )\n        drawLine(\n          code.location.bottomLeftCorner,\n          code.location.topLeftCorner,\n          '#FF3B58'\n        )\n        onDetect(code.data)\n      }\n    }\n    if (rageRef.current) requestAnimationFrame(tick)\n  }, [rageMode])\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: {\n          facingMode: 'environment',\n          frameRate: 10,\n          height,\n          width\n        },\n        audio: false\n      })\n      .then((stream) => {\n        if (videoRef.current) videoRef.current.srcObject = stream\n      })\n      .catch((error: unknown) => {\n        onError(error)\n      })\n  }, [])\n  useEffect(() => {\n    rageRef.current = rageMode\n    if (rageRef.current) {\n      const animation = requestAnimationFrame(tick)\n      return () => cancelAnimationFrame(animation)\n    }\n    let animation: number\n    const interval = setInterval(() => {\n      animation = requestAnimationFrame(tick)\n    }, freq)\n    return () => {\n      clearInterval(interval)\n      cancelAnimationFrame(animation)\n    }\n  }, [freq, rageMode])\n  return (\n    <div {...props}>\n      <video\n        hidden\n        playsInline\n        ref={videoRef}\n        width={width}\n        height={height}\n        style={videoStyle}\n        autoPlay\n      />\n      <canvas ref={canvasRef} width={width} height={height} hidden />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { BarDetect, ValidFreq, validFreq } from 'react-barcode-detector'\n\nconst normalizeFreq = (freq: ValidFreq): ValidFreq => {\n  if (freq < 100) return 100\n  return freq\n}\n\nconst App = () => {\n  const [rageMode, setRageMode] = useState(false)\n  const [freq, setFreq] = useState<ValidFreq>(200)\n  const [lastDetected, setLastDetected] = useState<string | null>(null)\n\n  return (\n    <div>\n      <div>\n        <BarDetect\n          onDetect={setLastDetected}\n          rageMode={rageMode}\n          freq={normalizeFreq(freq)}\n          style={{ width: '100%' }}\n        />\n      </div>\n      <label>\n        RageMode:\n        <input\n          type='checkbox'\n          checked={rageMode}\n          onChange={(e) => setRageMode(e.target.checked)}\n        />\n      </label>\n      <label>\n        Freq\n        <select\n          value={freq}\n          disabled={rageMode}\n          // @ts-ignore\n          onChange={(e) => setFreq(normalizeFreq(parseInt(e.target.value)))}\n        >\n          {validFreq.map((fre) => (\n            <option value={fre} key={fre}>\n              {fre}\n            </option>\n          ))}\n        </select>\n      </label>\n      <input\n        type='text'\n        value={`${lastDetected}`}\n        onChange={(e) => e.preventDefault()}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}