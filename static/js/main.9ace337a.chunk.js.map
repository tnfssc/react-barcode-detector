{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["off","freq","props","videoRef","useRef","canvasRef","useState","updateIt","setUpdate","prevState","tick","useCallback","context","drawLine","begin","end","console","imageData","code","jsQR","inversionAttempts","useEffect","navigator","video","facingMode","frameRate","height","width","audio","stream","error","interval","setInterval","clearInterval","hidden","playsInline","ref","style","videoStyle","autoPlay","App","ReactDOM","render","document","getElementById"],"mappings":"4PAckB,SAAC,GAAD,IAAC,EAAD,EAAC,QAAD,EAAC,OAAD,IAGhBA,WAHgB,aAIhBC,YAJgB,MAAC,IAAD,EAAC,EAAD,EAAC,WAMdC,EANa,4DAQVC,EAAWC,iBAAjB,MACMC,EAAYD,iBAAlB,MATgB,EAUYE,mBAA5B,GAVgB,mBAUV,EAVU,KAUV,EAVU,KAWVC,EAAW,kBAAMC,GAAWC,YAAD,OAAeA,EAAhD,MAEMC,EAAOC,uBAAY,WACvB,OAEER,WACAE,EADAF,SAEAA,uBAAgCA,UAHlC,iBAIE,CACAE,oBACA,IAAMO,EAAUP,qBAAhB,MACA,MAAc,OACd,IAAMQ,EAAW,SAACC,EAAD,KACfF,cACAA,SAAeE,EAAfF,EAAwBE,EAAxBF,GACAA,SAAeG,EAAfH,EAAsBG,EAAtBH,GACAA,cACAA,gBACAA,YAEFI,YAAYb,UAAZa,aACAX,iBAA2BF,UAA3BE,YACAA,gBAA0BF,UAA1BE,WACAO,YACET,EADFS,YAIEP,UAJFO,MAKEP,UALFO,QAOA,IAAMK,EAAYL,mBAGhBP,UAHgBO,MAIhBP,UAJF,QAMMa,EAAOC,IAAKF,EAAD,KAAiBA,EAAjB,MAAkCA,EAAlC,OAAoD,CACnEG,kBAAmB,eAErB,IACEP,EACEK,WADM,cAENA,WAFM,eAARL,WAKAA,EACEK,WADM,eAENA,WAFM,kBAARL,WAKAA,EACEK,WADM,kBAENA,WAFM,iBAARL,WAKAA,EACEK,WADM,iBAENA,WAFM,cAARL,WAKAG,YAAYE,EAAZF,UA1DN,IAqFA,OAvBAK,oBAAUX,EAAM,CAAhBW,IACAA,qBAAU,WACRC,oCACgB,CACZC,MAAO,CACLC,WADK,cAELC,UAFK,GAGLC,SACAC,SAEFC,OAAO,IARXN,MAUSO,YACD1B,EAAJ,UAAsBA,0BAX1BmB,OAaUQ,YACNd,sBAfNK,IAkBAA,qBAAU,WACR,IAAMU,EAAWC,YAAYzB,EAA7B,GACA,OAAO,kBAAM0B,cAAb,MACC,CAHHZ,IAKE,4CACE,2BACEa,QAAM,EACNC,aAAW,EACXC,IAAKjC,EACLwB,MAAOA,EACPD,OAAQA,EACRW,MAAOC,EACPC,UAAQ,IAEV,4BAAQH,IAAK/B,EAAWsB,MAAOA,EAAOD,OAAQA,EAAQQ,QAAM,MC9GnDM,G,MARH,WACV,OACE,6BACE,kBAAC,EAAD,CAAWvC,KAAM,IAAKoC,MAAO,CAAEV,MAAO,aCF5Cc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.9ace337a.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport jsQR from 'jsqr'\n// eslint-disable-next-line\nimport { Point } from 'jsqr/dist/locator'\n\nexport interface BarDetectProps {\n  width?: number\n  height?: number\n  freq?: 100 | 200 | 300 | 400 | 500\n  off?: false\n  videoStyle?: React.CSSProperties\n  [key: string]: any\n}\n\nconst BarDetect = ({\n  width,\n  height,\n  off = false,\n  freq = 200,\n  videoStyle,\n  ...props\n}: BarDetectProps) => {\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const [update, setUpdate] = useState(0)\n  const updateIt = () => setUpdate((prevState) => prevState + 1)\n\n  const tick = useCallback(() => {\n    if (off) return\n    if (\n      videoRef.current &&\n      canvasRef.current &&\n      videoRef.current.readyState === videoRef.current.HAVE_ENOUGH_DATA\n    ) {\n      canvasRef.current.hidden = false\n      const context = canvasRef.current.getContext('2d')\n      if (!context) return\n      const drawLine = (begin: Point, end: Point, color: string) => {\n        context.beginPath()\n        context.moveTo(begin.x, begin.y)\n        context.lineTo(end.x, end.y)\n        context.lineWidth = 4\n        context.strokeStyle = color\n        context.stroke()\n      }\n      console.log(videoRef.current.videoHeight)\n      canvasRef.current.height = videoRef.current.videoHeight\n      canvasRef.current.width = videoRef.current.videoWidth\n      context.drawImage(\n        videoRef.current,\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n      )\n      const imageData = context.getImageData(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n      )\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: 'dontInvert'\n      })\n      if (code) {\n        drawLine(\n          code.location.topLeftCorner,\n          code.location.topRightCorner,\n          '#FF3B58'\n        )\n        drawLine(\n          code.location.topRightCorner,\n          code.location.bottomRightCorner,\n          '#FF3B58'\n        )\n        drawLine(\n          code.location.bottomRightCorner,\n          code.location.bottomLeftCorner,\n          '#FF3B58'\n        )\n        drawLine(\n          code.location.bottomLeftCorner,\n          code.location.topLeftCorner,\n          '#FF3B58'\n        )\n        console.log(code.data)\n      }\n    }\n  }, [])\n  useEffect(tick, [update])\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: {\n          facingMode: 'environment',\n          frameRate: 10,\n          height,\n          width\n        },\n        audio: false\n      })\n      .then((stream) => {\n        if (videoRef.current) videoRef.current.srcObject = stream\n      })\n      .catch((error: unknown) => {\n        console.error(error)\n      })\n  }, [])\n  useEffect(() => {\n    const interval = setInterval(updateIt, freq)\n    return () => clearInterval(interval)\n  }, [freq])\n  return (\n    <div {...props}>\n      <video\n        hidden\n        playsInline\n        ref={videoRef}\n        width={width}\n        height={height}\n        style={videoStyle}\n        autoPlay\n      />\n      <canvas ref={canvasRef} width={width} height={height} hidden />\n    </div>\n  )\n}\n\nexport default BarDetect\n","import React from 'react'\n\nimport BarDetect from 'react-barcode-detector'\nimport 'react-barcode-detector/dist/index.css'\n\nconst App = () => {\n  return (\n    <div>\n      <BarDetect freq={200} style={{ width: \"100%\" }} />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}